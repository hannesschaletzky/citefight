[{"/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/reportWebVitals.js":"1","/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/index.tsx":"2","/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/App.tsx":"3","/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/pages/Legal.tsx":"4","/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/pages/errorpages/NotFound.tsx":"5","/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/pages/Donate.tsx":"6","/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/pages/Landing.tsx":"7","/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/pages/About.tsx":"8","/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/Mockdata.ts":"9","/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/Interfaces.tsx":"10","/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/pages/Credits.tsx":"11","/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/Extensions.js":"12","/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/Logic.tsx":"13","/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/pages/TwitterRedirect.tsx":"14","/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/pusher/Pusher.tsx":"15","/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/1_join/Join.tsx":"16","/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/3_match/Match.tsx":"17","/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/2_setup/Setup.tsx":"18","/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/2_setup/lobby/Lobby.tsx":"19","/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/2_setup/players/Players.tsx":"20","/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/2_setup/lobby/profiles/Profiles.tsx":"21","/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/2_setup/add/search/Search.tsx":"22","/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/0_root/Footer.tsx":"23","/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/3_match/tweet/Tweet.tsx":"24","/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/pages/TwitterCallback.tsx":"25","/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/2_setup/add/Add.tsx":"26","/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/0_root/Header.tsx":"27","/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/3_match/nav/Nav.tsx":"28","/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/3_match/nav/pages/Ranking.tsx":"29","/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/00_shared/chat/Chat.tsx":"30","/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/00_shared/settings/Settings.tsx":"31","/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/00_shared/notification/Notification.tsx":"32","/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/2_setup/interaction/Interaction.tsx":"33","/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/00_shared/profiles/TwitterProfileList.tsx":"34","/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/2_setup/add/popular/PopularProfiles.tsx":"35","/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/3_match/nav/pages/Ranking_Sorting.tsx":"36"},{"size":362,"mtime":1612013307768,"results":"37","hashOfConfig":"38"},{"size":500,"mtime":1612016004776,"results":"39","hashOfConfig":"38"},{"size":4111,"mtime":1615972466665,"results":"40","hashOfConfig":"38"},{"size":401,"mtime":1611867431112,"results":"41","hashOfConfig":"38"},{"size":500,"mtime":1612823136652,"results":"42","hashOfConfig":"38"},{"size":322,"mtime":1612820947127,"results":"43","hashOfConfig":"38"},{"size":1268,"mtime":1614952082500,"results":"44","hashOfConfig":"38"},{"size":318,"mtime":1612820938975,"results":"45","hashOfConfig":"38"},{"size":4783,"mtime":1615972421337,"results":"46","hashOfConfig":"38"},{"size":2071,"mtime":1616364255597,"results":"47","hashOfConfig":"38"},{"size":618,"mtime":1612820967289,"results":"48","hashOfConfig":"38"},{"size":2319,"mtime":1613140824619,"results":"49","hashOfConfig":"50"},{"size":1651,"mtime":1616363585126,"results":"51","hashOfConfig":"38"},{"size":741,"mtime":1614952081828,"results":"52","hashOfConfig":"38"},{"size":3005,"mtime":1616085453400,"results":"53","hashOfConfig":"38"},{"size":10072,"mtime":1615414717454,"results":"54","hashOfConfig":"38"},{"size":35930,"mtime":1616450653600,"results":"55","hashOfConfig":"38"},{"size":46278,"mtime":1616013844986,"results":"56","hashOfConfig":"38"},{"size":2528,"mtime":1615825469410,"results":"57","hashOfConfig":"38"},{"size":1901,"mtime":1615980152547,"results":"58","hashOfConfig":"38"},{"size":1046,"mtime":1616451013916,"results":"59","hashOfConfig":"38"},{"size":16699,"mtime":1616450872021,"results":"60","hashOfConfig":"38"},{"size":2213,"mtime":1613086149703,"results":"61","hashOfConfig":"38"},{"size":15276,"mtime":1616369316160,"results":"62","hashOfConfig":"38"},{"size":5825,"mtime":1615330372304,"results":"63","hashOfConfig":"38"},{"size":2493,"mtime":1615906038379,"results":"64","hashOfConfig":"38"},{"size":491,"mtime":1614904469938,"results":"65","hashOfConfig":"38"},{"size":4166,"mtime":1616452644158,"results":"66","hashOfConfig":"38"},{"size":6311,"mtime":1616449570691,"results":"67","hashOfConfig":"38"},{"size":8058,"mtime":1615970965979,"results":"68","hashOfConfig":"38"},{"size":9267,"mtime":1616362597619,"results":"69","hashOfConfig":"38"},{"size":2525,"mtime":1615902467076,"results":"70","hashOfConfig":"38"},{"size":4182,"mtime":1615826052311,"results":"71","hashOfConfig":"38"},{"size":8361,"mtime":1616080817943,"results":"72","hashOfConfig":"38"},{"size":685,"mtime":1615905909763,"results":"73","hashOfConfig":"38"},{"size":3355,"mtime":1616449666284,"results":"74","hashOfConfig":"38"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},"1f5ln2e",{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1xhk8fg",{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"111"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"85"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/reportWebVitals.js",[],["155","156"],"/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/index.tsx",[],["157","158"],"/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/App.tsx",[],"/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/pages/Legal.tsx",[],["159","160"],"/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/pages/errorpages/NotFound.tsx",[],"/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/pages/Donate.tsx",[],"/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/pages/Landing.tsx",[],"/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/pages/About.tsx",[],"/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/Mockdata.ts",[],"/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/Interfaces.tsx",[],"/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/pages/Credits.tsx",[],["161","162"],"/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/Extensions.js",[],"/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/Logic.tsx",[],"/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/pages/TwitterRedirect.tsx",[],"/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/pusher/Pusher.tsx",[],"/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/1_join/Join.tsx",[],["163","164"],"/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/3_match/Match.tsx",["165"],"/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/2_setup/Setup.tsx",[],"/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/2_setup/lobby/Lobby.tsx",[],["166","167"],"/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/2_setup/players/Players.tsx",[],"/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/2_setup/lobby/profiles/Profiles.tsx",["168"],"/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/2_setup/add/search/Search.tsx",[],"/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/0_root/Footer.tsx",[],"/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/3_match/tweet/Tweet.tsx",["169"],"import React from 'react'\nimport st from './Tweet.module.scss'\nimport {log} from 'components/Logic'\n\n//interfaces\nimport {Tweet} from 'components/Interfaces'\n//ui-elements\nimport VerifiedIcon from 'assets/tweet/VerifiedIcon.png'\nimport TwitterIcon from 'assets/tweet/Twitter_Icon.png'\nimport Reply_Icon from 'assets/tweet/Reply.png'\nimport Retweet_Icon from 'assets/tweet/Retweet.png'\nimport Like_Icon from 'assets/tweet/Like.png'\nimport QuestionMark from 'assets/tweet/QuestionMark.png'\n\n\n/*\n##################################\n            EXPORT\n##################################\n*/\ninterface Props {\n    tweet: Tweet\n    onPicClick:(picURL:string) => void\n}\nexport const getComponent = (tweet:Tweet, onPicClick:(picURL:string) => void) => {\n    let props:Props = {\n        tweet: tweet,\n        onPicClick: onPicClick\n    }\n    return React.createElement(TweetLogic, props)\n}\n\n/*\n##################################\n            LOGIC\n##################################\n*/\n\n//from: https://stackoverflow.com/a/9462382/6421228\nconst nFormatter = (input: string, digits = 2) => {\n\n    let num: number = +input\n\n    let si = [\n        { value: 1, symbol: \"\" },\n        { value: 1E3, symbol: \"k\" },\n        { value: 1E6, symbol: \"M\" },\n        { value: 1E9, symbol: \"G\" },\n        { value: 1E12, symbol: \"T\" },\n        { value: 1E15, symbol: \"P\" },\n        { value: 1E18, symbol: \"E\" }\n    ]\n    let rx = /\\.0+$|(\\.[0-9]*[1-9])0+$/\n    let i\n    for (i = si.length - 1; i > 0; i--) {\n        if (num >= si[i].value) {\n            break\n        }\n    }\n    return (num / si[i].value).toFixed(digits).replace(rx, \"$1\") + si[i].symbol\n}\n\nfunction TweetLogic(props:Props) {\n\n    const formatDate = (input:string):string => {\n        //input: 2019-06-06T14:59:47.000Z\n        let parsed = new Date(input).toLocaleDateString() \n        //parsed: 06/06/2019\n        let elements = parsed.split('/')\n        let m = \"\"\n        let nr:number = +elements[1]\n        if      (nr === 1) {m='Jan'}\n        else if (nr === 2) {m='Feb'}\n        else if (nr === 3) {m='Mar'}\n        else if (nr === 4) {m='Apr'}\n        else if (nr === 5) {m='May'}\n        else if (nr === 6) {m='Jun'}\n        else if (nr === 7) {m='Jul'}\n        else if (nr === 8) {m='Aug'}\n        else if (nr === 9) {m='Sep'}\n        else if (nr === 10) {m='Oct'}\n        else if (nr === 11) {m='Nov'}\n        else if (nr === 12) {m='Dec'}\n        let d = `${+elements[0]} ${m} ${elements[2]}`\n        return d\n    }\n\n    const getContent = () => {\n\n        //log(props.tweet)\n\n        //determine if name contains emoji\n        let userNameClass = st.UserName\n        if (/\\p{Extended_Pictographic}/u.test(props.tweet.t_userName) ) {\n            userNameClass = st.UserName_Emoji\n        }\n\n        /*\n        ###########################\n                TEXT\n        ###########################\n        */\n\n         /*\n            TODO:\n                https://stackoverflow.com/a/27422629/6421228\n                https://dev.w3.org/html5/html-author/charref\n\n                -> https://ascii.cl/htmlcodes.htm !!!!!!\n\n                q\n                -> ampersand (&) is escaped to &amp; \n                convert HTML codes into characters -> https://ascii.cl/htmlcodes.htm \n\n                let htmlChars = {\n                    quot: '\"',\n                    amp: '&',\n                    lt: '<',\n                    gt: '>',\n                }\n        */\n        \n        //https://stackoverflow.com/a/43282001\n        function convertHTMLEntity(text:string){\n            const span = document.createElement('span')\n            return text\n            .replace(/&[#A-Za-z0-9]+;/gi, (entity,position,text)=> {\n                span.innerHTML = entity\n                return span.innerText\n            });\n        }\n        let dec_tweetText = convertHTMLEntity(props.tweet.c_text)\n        //log(dec_tweetText)\n\n\n        /*\n        Hashtags AND Usernames can only contain letters, numbers, and underscores (_) \n        -> no special characters\n        */\n        //FROM HERE: https://stackoverflow.com/a/25693471\n        function findSpecialWords(searchText:string, links:boolean=false) {\n            let regexp = /(\\s|^)#\\w\\w+\\b/gm\n            if (links) {\n                regexp = /(\\s|^)@\\w\\w+\\b/gm\n            }\n            let result = searchText.match(regexp)\n            if (result) {\n                result = result.map(function(s:any){ return s.trim();})\n                return result\n            } else {\n                return false\n            }\n        }\n\n        //log(props.tweet.c_text)\n        //EXTRACT HASHTAGS\n        let foundHastags:RegExpMatchArray = []\n        let hashtags = findSpecialWords(dec_tweetText)\n        if (hashtags) {foundHastags = hashtags}\n        //log(hashtags)\n        //EXTRACT USERTAGS\n        let foundTags:RegExpMatchArray = []\n        let tags = findSpecialWords(dec_tweetText, true)\n        if (tags) {foundTags = tags}\n        //log(tags)\n        //split at line breaks\n        let blocks = dec_tweetText.split(/\\r?\\n/)\n        //log(blocks)\n\n        function isHashtag(word:string):string {\n            for(let i=0;i<foundHastags.length;i++) {\n                //also detect: #MalalaDay,\n                if (word.indexOf(foundHastags[i]) >= 0) {return foundHastags[i]}\n            }\n            return \"\"\n        }\n        function isUsertag(word:string):string {\n            for(let i=0;i<foundTags.length;i++) {\n                //also detect: #MalalaDay,\n                if (word.indexOf(foundTags[i]) >= 0) {return foundTags[i]}\n            }\n            return \"\"\n        }\n        //get random key\n        let key = 0\n        function grk():string {\n            return '' + key++\n        }\n\n        /*\n            Wishing a very happy birthday to @Malala! \n            To celebrate #MalalaDay, join me and the @GirlsAlliance\n            in our work to empower girls around the world. \n            Check out http://girlsopportunityalliance.org to learn more and get involved.\n            -> split text into spans if it contains #hastags or @links\n        */\n        let text = [<span key=\"-1\"></span>]\n        text = []\n        //loop each block\n        for(let i=0;i<blocks.length;i++) {\n            //split block\n            let words = blocks[i].split(/[ ]+/)\n            //loop each word\n            for(let j=0;j<words.length;j++) {\n                let word = words[j]\n\n                //determine word category\n                let hashtag = isHashtag(word)\n                let usertag = isUsertag(word)\n                //check hashtag\n                if (hashtag !== \"\") {\n                    text.push(  <a className={st.Link} key={grk()} href={\"https://twitter.com/hashtag/\" + word.substring(1)} target=\"_blank\" rel=\"noreferrer\" title=\"View hastag\">\n                                    <span className={st.Text_Link} key={grk()}>{hashtag}</span>\n                                </a>)\n                    let rest = word.replace(hashtag, \"\") //like: '#MalalaDay,' -> ','\n                    if (rest !== \"\") {\n                        text.push(<span className={st.Text} key={grk()}>{rest}</span>)\n                    }\n                }\n                //check usertag\n                else if (usertag !== \"\") {\n                    text.push(  <a className={st.Link} key={grk()} href={\"https://twitter.com/\" + word.substring(1)} target=\"_blank\" rel=\"noreferrer\" title=\"View profile\">\n                                    <span className={st.Text_Link} key={grk()}>{usertag}</span>\n                                </a>)\n                    let rest = word.replace(usertag, \"\") //like: '@Malala!' -> '!'\n                    if (rest !== \"\") {\n                        text.push(<span className={st.Text} key={grk()}>{rest}</span>)\n                    }\n                }\n                //normal word\n                else {\n                    text.push(<span className={st.Text} key={grk()}>{word}</span>)\n                }\n                //insert space after each word\n                text.push(<span key={grk()}> </span>)\n            }\n            //line break after block -> not at last one\n            if (i < blocks.length-1) {\n                text.push(<br key={grk()}></br>)\n            }\n        }\n\n        /*\n        ###########################\n                PICTURES\n        ###########################\n        */\n\n        const show = (picUrl:string) => {\n            props.onPicClick(picUrl)\n        }\n\n        let pic1 = props.tweet.c_photo1\n        let pic2 = props.tweet.c_photo2\n        let pic3 = props.tweet.c_photo3\n        let pic4 = props.tweet.c_photo4\n\n        let count = 0\n        if (pic1 !== \"\") {count++}\n        if (pic2 !== \"\") {count++}\n        if (pic3 !== \"\") {count++}\n        if (pic4 !== \"\") {count++}\n\n        let picturesComponent = <div></div>\n\n        //ONE\n        if (count === 1) {\n            picturesComponent = \n            <div className={st.Images_Con}>\n                <img className={st.OnePic} src={pic1} alt=\"\" onClick={() => {show(pic1)}}/>\n            </div>\n        }\n        else if (count === 2) {\n            picturesComponent = \n            <div className={st.Images_Con}>\n                <img className={st.Two_Left} src={pic1} alt=\"\" onClick={() => {show(pic1)}}/>\n                <img className={st.Two_Right} src={pic2} alt=\"\" onClick={() => {show(pic2)}}/>\n            </div>\n        }\n        else if (count === 3) {\n\n            //<img className={st.Three_Right_Top} src={tweet.c_photo2} alt=\"\"/>\n            //<img className={st.Three_Right_Bottom} src={tweet.c_photo3} alt=\"\"/>\n            picturesComponent =  \n                <div className={st.Images_Con}>\n                    <div className={st.Three_Left_Con}>\n                        <img className={st.Three_Left} src={pic1} alt=\"\" onClick={() => {show(pic1)}}/>\n                    </div>\n                    <div className={st.Three_Right_Con}>\n                        <div className={st.Three_Right_Top_Con}>\n                            <img className={st.Three_Right_Top} src={pic2} alt=\"\" onClick={() => {show(pic2)}}/>\n                        </div>\n                        <div className={st.Three_Right_Bottom_Con}>\n                            <img className={st.Three_Right_Bottom} src={pic3} alt=\"\" onClick={() => {show(pic3)}}/>\n                        </div>\n                    </div>\n                </div>\n        }\n        else if (count === 4) {\n            picturesComponent =  \n                <div className={st.Images_Con}>\n                    <div className={st.Four_Left_Con}>\n                        <div className={st.Four_Left_Top_Con}>\n                            <img className={st.Four_Left_Top} src={pic1} alt=\"\" onClick={() => {show(pic1)}}/>\n                        </div>\n                        <div className={st.Four_Left_Bottom_Con}>\n                            <img className={st.Four_Left_Bottom} src={pic2} alt=\"\" onClick={() => {show(pic2)}}/>\n                        </div>\n                    </div>\n                    <div className={st.Four_Right_Con}>\n                        <div className={st.Four_Right_Top_Con}>\n                            <img className={st.Four_Right_Top} src={pic3} alt=\"\" onClick={() => {show(pic3)}}/>\n                        </div>\n                        <div className={st.Four_Right_Bottom_Con}>\n                            <img className={st.Four_Right_Bottom} src={pic4} alt=\"\" onClick={() => {show(pic4)}}/>\n                        </div>\n                    </div>\n                </div>\n        }\n\n        //TOP COMPONENT ICONS\n        let userIconComp = <div></div>\n        let userVerifiedComp = <div></div>\n        let tweetIconComp = <div></div>\n        if (props.tweet.t_profileURL === '') {\n            userIconComp = \n                <img className={st.Pic} src={QuestionMark} alt=\"User\"/>\n            userVerifiedComp =\n                <img className={st.Verified_Icon_Disabled} src={VerifiedIcon} alt=\"Verified\"/>\n        }\n        else {\n            userIconComp = \n                <a href={props.tweet.t_profileURL} target=\"_blank\" rel=\"noreferrer\" title=\"View twitter profile\">\n                    <img className={st.Pic} src={props.tweet.t_userPicURL} alt=\"User\"/>\n                </a>\n            userVerifiedComp =\n                <img className={st.Verified_Icon} src={VerifiedIcon} title=\"Verified User\" alt=\"Verified\"/>\n        }\n\n        //only enable clicking on twitter icon when solution is here\n        if (props.tweet.t_tweetURL === '') {\n            tweetIconComp = \n                <img className={st.Twitter_Icon_Disabled} src={TwitterIcon} alt=\"Tweet\"/>\n        }\n        else {\n            tweetIconComp = \n                <a href={props.tweet.t_tweetURL} target=\"_blank\" rel=\"noreferrer\" title=\"View tweet\">\n                    <img className={st.Twitter_Icon} src={TwitterIcon} alt=\"Tweet\"/>\n                </a>\n        }\n\n\n        //COMPOSE TWEET\n        let content = \n        <div className ={st.Con}>\n            <div className ={st.Inside_Con}>\n                {/*TOP*/}\n                <div className={st.Top_Con}>\n                    {userIconComp}\n                    <div className={st.UserCard_Con}>\n                        <div className={st.Names_Con}>\n                            <div className={st.UserName_Con}>\n                                <div className={userNameClass} title={props.tweet.t_userName}>\n                                    {props.tweet.t_userName}\n                                </div>\n                                {props.tweet.t_userVerified && userVerifiedComp}\n                            </div>\n                            <div className={st.UserTag}>\n                                @{props.tweet.t_userTag}\n                            </div>\n                        </div>\n                        {tweetIconComp}\n                    </div>\n                </div>\n                {/*CONTENT*/}\n                <div className={st.Content_Con}>\n                    <div className={st.Text_Con}>\n                        <span>{text}</span>\n                    </div>\n                    {picturesComponent}\n                    <div className={st.Date_Con}>\n                        {formatDate(props.tweet.b_date)}\n                    </div>\n                </div>\n                {/*BOTTOM*/}\n                <div className={st.Bot_Con}>\n                    <div className={st.Reply_Con}>\n                        <img className={st.Bot_Icon_Reply} src={Reply_Icon} alt=\"Reply\"/>\n                        <div className={st.Bot_Number}>{nFormatter(props.tweet.b_replyCount)}</div>\n                    </div>\n                    <div className={st.Retweet_Con}>\n                        <img className={st.Bot_Icon_Retweet} src={Retweet_Icon} alt=\"Retweet\"/>\n                        <div className={st.Bot_Number}>{nFormatter(props.tweet.b_retweetCount)}</div>\n                    </div>\n                    <div className={st.Like_Con}>\n                        <img className={st.Bot_Icon_Like} src={Like_Icon} alt=\"Like\"/>\n                        <div className={st.Bot_Number}>{nFormatter(props.tweet.b_likeCount)}</div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        return content\n    }\n\n    return (\n        getContent()\n    )\n}\n\n\n\n\n","/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/pages/TwitterCallback.tsx",[],"/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/2_setup/add/Add.tsx",[],"/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/0_root/Header.tsx",[],"/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/3_match/nav/Nav.tsx",[],"/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/3_match/nav/pages/Ranking.tsx",[],"/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/00_shared/chat/Chat.tsx",[],"/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/00_shared/settings/Settings.tsx",[],"/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/00_shared/notification/Notification.tsx",[],"/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/2_setup/interaction/Interaction.tsx",[],"/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/00_shared/profiles/TwitterProfileList.tsx",[],"/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/2_setup/add/popular/PopularProfiles.tsx",["170"],"import st from './PopularProfiles.module.scss';\n\n//interfaces\nimport {ProfilesUsage} from 'components/Interfaces'\nimport {TwitterStatus} from 'components/Interfaces'\n//functional-interfaces\nimport {PopularProfilesProps} from 'components/Functional_Interfaces'\n//components\nimport TwitterProfileList from 'components/00_shared/profiles/TwitterProfileList'\n\nexport default function PopularProfiles(props:PopularProfilesProps) {\n\n    return (\n        <div className={st.Con}>\n            <TwitterProfileList\n                parentType={ProfilesUsage.Search}\n                data={props.popularProfiles}\n                onAddUser={props.addProfile}\n            />\n        </div>\n    )\n}\n\n\n","/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/3_match/nav/pages/Ranking_Sorting.tsx",[],{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","replacedBy":"174"},{"ruleId":"171","replacedBy":"175"},{"ruleId":"173","replacedBy":"176"},{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","replacedBy":"174"},{"ruleId":"171","replacedBy":"177"},{"ruleId":"173","replacedBy":"178"},{"ruleId":"171","replacedBy":"179"},{"ruleId":"173","replacedBy":"180"},{"ruleId":"181","severity":1,"message":"182","line":305,"column":11,"nodeType":"183","messageId":"184","endLine":305,"endColumn":22},{"ruleId":"171","replacedBy":"185"},{"ruleId":"173","replacedBy":"186"},{"ruleId":"181","severity":1,"message":"187","line":6,"column":9,"nodeType":"183","messageId":"184","endLine":6,"endColumn":22},{"ruleId":"181","severity":1,"message":"188","line":3,"column":9,"nodeType":"183","messageId":"184","endLine":3,"endColumn":12},{"ruleId":"181","severity":1,"message":"187","line":5,"column":9,"nodeType":"183","messageId":"184","endLine":5,"endColumn":22},"no-native-reassign",["189"],"no-negated-in-lhs",["190"],["189"],["190"],["189"],["190"],["189"],["190"],"@typescript-eslint/no-unused-vars","'setPointFor' is assigned a value but never used.","Identifier","unusedVar",["189"],["190"],"'TwitterStatus' is defined but never used.","'log' is defined but never used.","no-global-assign","no-unsafe-negation"]