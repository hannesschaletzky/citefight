[{"/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/reportWebVitals.js":"1","/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/index.tsx":"2","/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/App.tsx":"3","/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/root/Header.tsx":"4","/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/menu/Menu.jsx":"5","/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/match/Match.tsx":"6","/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/pages/Legal.tsx":"7","/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/root/Footer.tsx":"8","/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/pages/errorpages/NotFound.tsx":"9","/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/match/tweet/Tweet.tsx":"10","/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/pages/Donate.tsx":"11","/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/pages/Landing.tsx":"12","/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/match/Mockup.tsx":"13","/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/pages/About.tsx":"14","/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/match/setup/Setup.tsx":"15","/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/Mockdata.ts":"16","/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/match/setup/search/Search.tsx":"17","/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/match/setup/search/SearchList.tsx":"18","/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/match/nav/pages/Nav_Ranking.tsx":"19","/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/match/nav/Nav.tsx":"20","/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/match/tweet/parts/Images.tsx":"21","/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/match/tweet/parts/BottomPart.tsx":"22","/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/match/nav/pages/Nav_Answers.tsx":"23","/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/match/setup/players/Players.tsx":"24","/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/match/setup/chat/Chat.tsx":"25","/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/match/tweet/parts/TopPart.tsx":"26"},{"size":362,"mtime":1612013307768,"results":"27","hashOfConfig":"28"},{"size":500,"mtime":1612016004776,"results":"29","hashOfConfig":"28"},{"size":1987,"mtime":1612820974733,"results":"30","hashOfConfig":"28"},{"size":619,"mtime":1612214882618,"results":"31","hashOfConfig":"28"},{"size":3059,"mtime":1611754162164,"results":"32","hashOfConfig":"28"},{"size":271,"mtime":1612823122249,"results":"33","hashOfConfig":"28"},{"size":401,"mtime":1611867431112,"results":"34","hashOfConfig":"28"},{"size":2192,"mtime":1612987731849,"results":"35","hashOfConfig":"28"},{"size":500,"mtime":1612823136652,"results":"36","hashOfConfig":"28"},{"size":1106,"mtime":1612802141414,"results":"37","hashOfConfig":"28"},{"size":322,"mtime":1612820947127,"results":"38","hashOfConfig":"28"},{"size":1249,"mtime":1612214819003,"results":"39","hashOfConfig":"28"},{"size":1619,"mtime":1612814853355,"results":"40","hashOfConfig":"28"},{"size":318,"mtime":1612820938975,"results":"41","hashOfConfig":"28"},{"size":11988,"mtime":1613078805641,"results":"42","hashOfConfig":"28"},{"size":6640,"mtime":1612814849900,"results":"43","hashOfConfig":"28"},{"size":5522,"mtime":1613075679259,"results":"44","hashOfConfig":"28"},{"size":4644,"mtime":1612951937340,"results":"45","hashOfConfig":"28"},{"size":6749,"mtime":1612814305974,"results":"46","hashOfConfig":"28"},{"size":3540,"mtime":1612802119719,"results":"47","hashOfConfig":"28"},{"size":4765,"mtime":1612216103823,"results":"48","hashOfConfig":"28"},{"size":1532,"mtime":1612216278448,"results":"49","hashOfConfig":"28"},{"size":3050,"mtime":1612814163876,"results":"50","hashOfConfig":"28"},{"size":641,"mtime":1613074044839,"results":"51","hashOfConfig":"28"},{"size":3047,"mtime":1613077223337,"results":"52","hashOfConfig":"28"},{"size":1695,"mtime":1612216286818,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1xhk8fg",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"71"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},"/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/reportWebVitals.js",[],["117","118"],"/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/index.tsx",[],["119","120"],"/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/App.tsx",[],["121","122"],"/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/root/Header.tsx",[],["123","124"],"/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/menu/Menu.jsx",[],["125","126"],"/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/match/Match.tsx",[],["127","128"],"/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/pages/Legal.tsx",[],["129","130"],"/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/root/Footer.tsx",["131"],"import React, { Component } from 'react'\nimport st from './Footer.module.scss'\n\nimport twitterIcon from 'assets/footer/Twitter_Icon.png'\nimport GithubIcon from 'assets/footer/GitHub_Icon.png'\nimport Back4AppIcon from 'assets/footer/Back4App_Icon.png'\nimport VSCodeIcon from 'assets/footer/VSCode_Icon.png'\nimport PostmanIcon from 'assets/footer/Postman_Icon.png'\nimport PusherIcon from 'assets/footer/Pusher_Icon.png'\n\nclass Root_Footer extends Component {\n\n    constructor(props: any) {\n        super(props);\n        this.state = {\n        };\n    }\n\n    render() { \n        return (  \n            <div>\n                <div className={st.Icon_Container}>\n                    <a className={st.Icon} href=\"https://www.twitter.com/\" target=\"_blank\" rel=\"noreferrer\">\n                        <img src={twitterIcon} alt=\"Twitter\" width=\"22\" height=\"22\"/>\n                    </a>\n                    <a className={st.Icon} href=\"https://github.com/\" target=\"_blank\" rel=\"noreferrer\">\n                        <img src={GithubIcon} alt=\"Github\" width=\"20\" height=\"20\"/>\n                    </a>\n                    <a className={st.Icon}  href=\"https://pusher.com/\" target=\"_blank\" rel=\"noreferrer\">\n                        <img src={PusherIcon} alt=\"Pusher\" width=\"24\" height=\"24\"/>\n                    </a>\n                    <a className={st.Icon}  href=\"https://code.visualstudio.com/\" target=\"_blank\" rel=\"noreferrer\">\n                        <img src={VSCodeIcon} alt=\"VSCode\" width=\"20\" height=\"20\"/>\n                    </a>\n                    <a className={st.Icon}  href=\"https://www.postman.com/\" target=\"_blank\" rel=\"noreferrer\">\n                        <img src={PostmanIcon} alt=\"Postman\" width=\"20\" height=\"20\"/>\n                    </a>\n                </div>\n                <div className={st.Link_Container}>\n                    <a className={st.Link} href=\"/legal\">Legal</a>\n                    <a className={st.Link} href=\"/about\">About</a>\n                    <a className={st.Link} href=\"/donate\">Donate</a>\n                    <a className={st.Link} href=\"/credits\">Credits</a>\n                </div>\n            </div>\n        );\n    }\n\n}\nexport default Root_Footer;\n\n\n\n\n","/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/pages/errorpages/NotFound.tsx",[],"/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/match/tweet/Tweet.tsx",[],"/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/pages/Donate.tsx",[],"/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/pages/Landing.tsx",[],"/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/match/Mockup.tsx",[],"/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/pages/About.tsx",[],"/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/match/setup/Setup.tsx",["132"],"/* eslint-disable react/jsx-pascal-case */\nimport { useState, useEffect, useRef, useReducer } from 'react';\nimport st from './Setup.module.scss'\n//import { useParams } from 'react-router-dom';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport Search from './search/Search'\nimport Players from './players/Players'\nimport Chat from './chat/Chat'\n\nimport {Setup_State} from 'components/Interfaces'\nimport {Setup_Player} from 'components/Interfaces'\nimport {Setup_ChatMsg} from 'components/Interfaces'\nimport {Twitter_User} from 'components/Interfaces'\n\nenum PusherConState {\n    initialized = 'initialized',\n    connecting = 'connecting',\n    connected = 'connected',\n    unavailable = 'unavailable',\n    failed = 'failed',\n    disconnected = 'disconnected',\n}\n\nenum SystemMessage {\n    userJoined,\n    userLeft\n}\n\n//TEST CHAT\n/*\nlet msg1:Setup_ChatMsg = {\n    name: 'Leo',\n    message: 'Hi Chat, gl all'\n}\nlet msg2:Setup_ChatMsg = {\n    name: 'Adam',\n    message: 'Hi Leo, ty u2'\n}\nlet msg3:Setup_ChatMsg = {\n    name: 'Phil',\n    message: 'Hi together, have a good game guys. I really wish you luck'\n}\nlet testChat:Setup_ChatMsg[] = [msg1, msg2, msg3]\n*/\n\nconst selectedUserInit:Twitter_User[] = []\nconst playersInit:Setup_Player[] = []\nconst chatInit:Setup_ChatMsg[] = []\n\nconst setupStateInit:Setup_State = {\n    players: playersInit,\n    chat: chatInit,\n    selectedTwitterUser: selectedUserInit\n}\n\nconst Pusher = require('pusher-js');\nlet pusherClient:any = null\n\nexport default function Setup() {\n    //setup state for entire setup page\n    const ref_setupState = useRef(setupStateInit);\n    const [,forceUpdate] = useReducer(x => x + 1, 0);\n\n    //RIGHT PANEL\n    const [userName, setUserName] = useState(\"\");\n    const [joinEnabled, setJoinEnabled] = useState(false);\n    const [joined, setJoined] = useState(false);\n    const [loading, setLoading] = useState(false)\n    const [pusherConState, setPusherConState] = useState(PusherConState.initialized)\n    \n    const channelName = 'Game1'\n    const event_Setup = 'Setup'\n\n    //params hook\n    //const { id } = useParams<Record<string, string | undefined>>()\n\n    useEffect(() => {\n\n    });\n\n    /*\n    ##################################\n    ##################################\n        JOIN GAME && LEAVE GAME\n    ##################################\n    ##################################\n    */\n    const createPlayerObject = (name: string) => {\n        let newPlayer:Setup_Player = {\n            name: name\n        }\n        return newPlayer\n    }\n\n    const addSystemChatMsg = (type:SystemMessage, userName:string) => {\n\n        //create msg\n        let msg:Setup_ChatMsg = {\n            name: 'sys',\n            message: ''\n        }\n\n        //determine type \n        if (type === SystemMessage.userJoined) {\n            msg.message = userName + ' joined'\n        }\n        else if (type === SystemMessage.userLeft) {\n            msg.message = userName + ' left'\n        }\n\n        //add\n        ref_setupState.current.chat.push(msg)\n    }\n\n\n\n    /*\n    ##################################\n    ##################################\n        JOIN GAME && LEAVE GAME\n    ##################################\n    ##################################\n    */\n    const joinGame = () => {\n\n        //check if enabled\n        if (!joinEnabled) {\n            return\n        }\n\n        //check if user already joined\n        if (pusherClient !== null) {\n            console.log('already joined')\n            return\n        }\n\n        setLoading(true)\n\n        //init pusher client\n        let appKey = process.env.REACT_APP_PUSHER_KEY\n        let cluster = process.env.REACT_APP_PUSHER_CLUSTER\n        let _pusherClient = new Pusher(appKey, {\n          cluster: cluster,\n          encrypted: true\n        })\n\n        //bind to all events\n        //see: https://pusher.com/docs/channels/using_channels/connection#available-states\n        _pusherClient.connection.bind('state_change', (states:any) => {\n            //states = {previous: 'oldState', current: 'newState'}\n            console.log('new con state: ' + states.current)\n            setPusherConState(states.current) //-> also see enum PusherConState\n        });\n\n        //bind error event\n        _pusherClient.connection.bind('error', (err:any) => {\n            setJoined(false)\n            setLoading(false)\n            let str = JSON.stringify(err, null, 4);\n            console.log('error during pusher connection')\n            console.log(str)\n        })\n\n        //bind connected\n        _pusherClient.connection.bind('connected', () => {\n            console.log('pusher is connected')\n            pusherClient = _pusherClient //set to global var\n            setJoined(true)\n            setLoading(false)\n\n            //sub to game channel\n            const channel = pusherClient.subscribe(channelName)\n            //bind sub success\n            channel.bind('pusher:subscription_succeeded', () => {\n                console.log('subscribed to channel: ' + channelName)\n                //bind event 'Setup State'\n                channel.bind(event_Setup, (data:any) => \n                    handleEvent_SetupState(data)\n                )\n\n                //tell others you're here\n                let newUser = createPlayerObject(userName)\n                ref_setupState.current.players.push(newUser)\n                addSystemChatMsg(SystemMessage.userJoined, userName)\n                fireEvent_NewState()\n            });\n\n            //bind sub error\n            channel.bind('pusher:subscription_error', (err:any) => {\n                let str = JSON.stringify(err, null, 4);\n                console.log('error during subscribing to channel: ' + channelName)\n                console.log(str)\n            });\n        })\n    }\n\n\n    const leaveGame = () => {\n\n        //bind disconnect event\n        pusherClient.connection.bind('disconnected', () => {\n\n            //remove user from players, share new state, empty players list\n            for (let i = 0; ref_setupState.current.players.length;i++) {\n                let user = ref_setupState.current.players[i]\n                if (user.name === userName) {\n                    console.log('removing player: ' + user.name)\n                    addSystemChatMsg(SystemMessage.userLeft, user.name)\n                    ref_setupState.current.players.splice(i,1);\n                    break\n                }\n            }\n            fireEvent_NewState()\n            ref_setupState.current.players = []\n\n            //reset vars\n            setJoinEnabled(false)\n            setJoined(false)\n            setLoading(false)\n            pusherClient = null //must be last \n\n            console.log('successfully disconnected')\n        })\n\n        pusherClient.disconnect()\n    }\n\n    \n\n    \n\n    /*\n    ##################################\n    ##################################\n        EVENT: SetupState\n    ##################################\n    ##################################\n    */\n    const handleEvent_SetupState = (data:any) => {\n        let str = JSON.stringify(data, null, 4);\n        console.log(str)\n\n        //read new state\n        let newState:Setup_State = data.state\n        let newPlayer:Setup_Player = newState.players[0]\n        \n        /*\n            one entry in players\n            && NOT your username \n            -> request from new user to join\n            -> reply current state with attached new user\n        */\n        if (newState.players.length === 1 && newPlayer.name !== userName) {\n            //attach new player\n            let newUser = createPlayerObject(newPlayer.name)\n            addSystemChatMsg(SystemMessage.userJoined, newPlayer.name)\n            ref_setupState.current.players.push(newUser)\n            //only first user replies -> reduce number of events triggered\n            if (userName === ref_setupState.current.players[0].name) {\n                fireEvent_NewState()\n            }\n        }\n        /*\n            -> new state received\n        */\n       else {\n            ref_setupState.current = newState\n            forceUpdate()\n       }\n    }\n\n    const fireEvent_NewState = async () => {\n\n        console.log('Broadcast new state')\n        let socketID = pusherClient.connection.socket_id;\n        let state:Setup_State = ref_setupState.current\n\n        const response = await fetch('/api/pusher/setup/players', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            'pusherchannel': channelName,\n            'pusherevent': event_Setup,\n            'pushersocketid': socketID\n        },\n        body: JSON.stringify({ state }), //msg\n        });\n        const body = await response.text();\n        console.log(body)\n    }\n\n    /*\n    ##################################\n    ##################################\n        Functions to child components\n    ##################################\n    ##################################\n    */\n\n    //passed to search component\n    const onNewTwitterUserAdded = (newUser: Twitter_User):void => {\n        //you have to put a new object entirely\n        //-> see https://stackoverflow.com/questions/59690934/react-hook-usestate-not-updating-ui\n        ref_setupState.current.selectedTwitterUser.push(newUser)\n        fireEvent_NewState()\n    }\n\n    //passed to chat \n    const onNewChatMessage = (newMsg:Setup_ChatMsg) => {\n        console.log('new chat msg received: ' + newMsg.message)\n        newMsg.name = userName //chat component does not know/set user name\n        ref_setupState.current.chat.push(newMsg)\n        fireEvent_NewState()\n    }\n\n    /*\n    ##################################\n    ##################################\n            Handlers\n    ##################################\n    ##################################\n    */\n    const userNameChanged = (name: string) => {\n        setUserName(name)\n\n        //check empty or only spaces\n        if (name.length === 0 || !name.trim()) {\n            setJoinEnabled(false)\n        }\n        else {\n            setJoinEnabled(true)\n        }\n    }\n\n    const keyPressed = (event: any) => {\n        if (event.key === 'Enter' && userName !== \"\") {\n            joinGame()\n        }\n    }\n\n  return (\n    <div className={st.Content_Con}>\n        <div className={st.Left_Panel}>\n            {Search(onNewTwitterUserAdded, ref_setupState.current.selectedTwitterUser)}\n        </div>\n        {joined && \n            <div className={st.Center_Panel}>\n                {ref_setupState.current.selectedTwitterUser.length}\n            </div>\n        }\n        <div className={st.Right_Panel}>\n            <div className={st.Interaction_Con}>\n                {!joined &&\n                    <input  className={st.Input}\n                            type=\"search\" \n                            autoComplete=\"off\" \n                            placeholder=\"Enter a name\"\n                            onChange={e => userNameChanged(e.target.value)} \n                            onKeyUp={e => keyPressed(e)}/>\n                }\n                {joinEnabled && !joined &&\n                    <button className={st.Button_Join} onClick={() => joinGame()}>\n                        Join\n                    </button>\n                }\n                {joined && \n                    <button className={st.Button_Leave} onClick={() => leaveGame()}>\n                        Leave\n                    </button>\n                }\n                {loading && \n                    <CircularProgress/>\n                }\n            </div>\n            {Players(ref_setupState.current.players)}\n            {joined && \n                <Chat \n                    data={ref_setupState.current.chat}\n                    onNewMsg={onNewChatMessage}\n                />\n            }\n        </div>\n    </div>\n  );\n}\n\n//{pusherConState}\n\n\n\n\n\n\n\n/*\n    //check if already subscribed\n    let _channel = pusherClient.channel(channelName)\n    if (_channel !== undefined) {\n        if (_channel.subscribed) {\n            return\n        }\n    }\n*/\n\n\n\n\n","/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/Mockdata.ts",[],"/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/match/setup/search/Search.tsx",[],"/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/match/setup/search/SearchList.tsx",[],"/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/match/nav/pages/Nav_Ranking.tsx",[],["133","134"],"/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/match/nav/Nav.tsx",[],"/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/match/tweet/parts/Images.tsx",[],["135","136"],"/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/match/tweet/parts/BottomPart.tsx",[],"/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/match/nav/pages/Nav_Answers.tsx",[],"/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/match/setup/players/Players.tsx",[],"/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/match/setup/chat/Chat.tsx",[],"/Users/hannesschaletzky/Desktop/repos/citefight2/client/src/components/match/tweet/parts/TopPart.tsx",[],{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","replacedBy":"140"},{"ruleId":"137","replacedBy":"141"},{"ruleId":"139","replacedBy":"142"},{"ruleId":"137","replacedBy":"143"},{"ruleId":"139","replacedBy":"144"},{"ruleId":"137","replacedBy":"145"},{"ruleId":"139","replacedBy":"146"},{"ruleId":"137","replacedBy":"147"},{"ruleId":"139","replacedBy":"148"},{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","replacedBy":"140"},{"ruleId":"137","replacedBy":"149"},{"ruleId":"139","replacedBy":"150"},{"ruleId":"151","severity":1,"message":"152","line":6,"column":8,"nodeType":"153","messageId":"154","endLine":6,"endColumn":20},{"ruleId":"151","severity":1,"message":"155","line":71,"column":12,"nodeType":"153","messageId":"154","endLine":71,"endColumn":26},{"ruleId":"137","replacedBy":"156"},{"ruleId":"139","replacedBy":"157"},{"ruleId":"137","replacedBy":"147"},{"ruleId":"139","replacedBy":"148"},"no-native-reassign",["158"],"no-negated-in-lhs",["159"],["158"],["159"],["158"],["159"],["158"],["159"],["158"],["159"],["158"],["159"],"@typescript-eslint/no-unused-vars","'Back4AppIcon' is defined but never used.","Identifier","unusedVar","'pusherConState' is assigned a value but never used.",["158"],["159"],"no-global-assign","no-unsafe-negation"]